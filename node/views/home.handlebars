<a href="https://github.com/samuelmr/pebble-getbackintime"><img style="position: fixed; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/e7bbb0521b397edbd5fe43e7f760759336b5e05f/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677265656e5f3030373230302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_green_007200.png"></a>

<p><strong>Get Back in Time</strong> is an app for the Pebble smart watch.
You can use it to find your way back from your hiking trip, locate your parked car or
just see how far you have traveled from a certain point. Just long-press SELECT on your
Pebble and your target is stored.</p>

<div><a href="http://pblweb.com/appstore/553329021b2b662f5b000069" title="Get Back in Time on the Pebble appstore">
  <img src="http://pblweb.com/badge/553329021b2b662f5b000069/black/large/" />
</a></div>

<p>The app allows you to store any amount of locations, which are pushed into your
personal Pebble Timeline. You can browse your Timeline to find a location you wish
to return to. A menu of 20 most recent locations are also available in your watch.</p>
<p>Your Pebble will show you the heading and distance to your target. It uses the 
compass to show you which way to go and colors to indicate whether you're approaching
your target or moving away from it. The target is stored so that you can use other
Pebble apps in the mean time and when you return to Get Back in Time you will see
up-to-date heading and distance to your target.</p>

<p>The app works even if your Pebble doesn't yet have the Timeline functionality.</p>
<div id="troubleshooting">
<h2>Troubleshooting</h2>
<p>Click or tap the items below if they correspond to your situation.</p>
<ul>
 <li>The basics
  <ul>
   <li>The distance is calculated based on the location of your phone.</li>
   <li>If your phone can't get a good GPS signal, your position can't be determined. This may often happen if you are indoors, especially in basements or tunnels where there is no clear visibility to the sky (and the GPS satellites).</li>
   <li>The accuracy of your location (labeled gps acc.) is shown in the top right hand corner.</li>
   <li>It may take a while to calibrate the compass.</li>
   <li>Magnetic sources interfere with the compass and the compass calibration.</li>
  </ul>
 </li>
 <li>The arrow points to incorrect direction
  <ul>
   <li>The compass in your Pebble may be calibrated poorly. If you slowly turn around a full circle and the arrow doesn't point to a single location, you have to recalibrate the compass. You have to reset your Pebble by holding the BACK and SELECT buttons down for about 10 seconds. When the compass is recalibrating, stay away from magnetic sources.</li>
   <li>There are magnetic sources nearby. Stay away from power lines, fridges, big electronic appliances etc.</li>
   <li>The magnet in your Pebble's charging cable interferes with the compass. The compass cannot be used when the phone is charging.</li>
  </ul>
 </li>
 <li>The distance is not changing altough I'm moving
  <ul>
   <li>Is your phone moving with you? Your location is based on the location of your phone.</li>
   <li>Is the location accurate enough? If "gps acc." field shows a value greater than 50 (or greater than the distance to your target), your position cannot be determined reliably.</li>
   <li>Does your phone have a clear visibility to the sky?</li>
   <li>If you open any map application on your phone, can you see yourself moving on the map?</li>
  </ul>
 </li>
 <li>I can't see the arrow, only a circle
  <ul>
   <li>Your location is not accurate enough for the app to know which way you should go. Anyways, you should be pretty near to your target. Make sure your phone has unobstructed view to the sky and can get a good fix on GPS satellites.</li>
  </ul>
 </li>
</ul>
<p>If you encounter other issues or the advice above doesn't help, send mail to <a href="mailto:help@timelinepush.com">help@timelinepush.com</a>.</p>
</div>
<div id="advanced">
<h2>Advanced usage</h2>
<p>You can set targets also using the form below or via an API. Just POST a JSON object
with <tt>position</tt> element in the root level, and a new pin will be pushed to your
Timeline. The object will be pushed to the Pebble Timeline. If you insert a <tt>pin</tt>
element (<a href="http://developer.getpebble.com/guides/timeline/pin-structure/">see 
Timeline Pin Structure</a>) to your JSON object, it will be passed on as is. Otherwise
a new pin with some basic properties is created automatically. <tt>Open Watch App</tt>
action is added to all pins.</p>
<h3>Your personal tokens</h3>
<p>You need an account token in order to send locations to the server. In order to push
pins to Pebble's timeline, you also need a timeline token. You can get your personal
tokens from the watch app's configuration page. Open the Pebble app in your phone,
select <tt>SETTINGS</tt> (or the gear icon) for <tt>Get Back in Time</tt> app and scroll
to the end of the configuration screen.</p>
<h3>Example JSON</h3>
<code>{
  "position": {
    "coords": {
      "latitude": 60.9,
      "longitude": 24.1
    }
  },
  "time": "2015-04-29T16:07:22Z",
  // insert your personal timeline token here
  "timelineToken": '<span class="codetoken">{{timelineToken}}</span>',
  pin {
    // you shouldn't specify an id 
    // but if you do, it must be a unique integer
    "id": "1",
    "time": "2015-04-29T16:07:22Z",
    "layout": {
      "type": "genericPin",
      "tinyIcon": "system://images/NOTIFICATION_FLAG",
      "title": "Your car is here",
      "subtitle": "Get Back in Time",
      "body": "Thank's for using Amazing Parking App."
    },
    "createNotification": {
      "layout": {
        "type": "genericNotification",
        "title": "Car location stored!",
        "body": "This pin was sent from Amazing Parking App."
      }
    },
    "reminders": [
      {
        "time": "2015-04-29T18:07:22Z",
        "layout": {
          "type": "genericReminder",
          "tinyIcon": "system://images/TIMELINE_CALENDAR",
          "title": "It's time to get back!"
        }
      }
    ]
  }
}
</code>
<h3>Minimal JSON</h3>
<code>{
  "position": {
    "coords": {
      "latitude": 60.9,
      "longitude": 24.1
    }
  },
}
</code>
<h3>Example API call with JavaScript</h3>
<code>// place your own account token here!
var userToken = '<span class="codetoken">{{userToken}}</span>';
// add your timeline token here
var timelineToken = '<span class="codetoken">{{timelineToken}}</span>';
var url = '<span id="docloc">http://getback.timelinepush.com</span>/' + 
  userToken + '/place/new';
var req = new XMLHttpRequest();
req.onload = function() {
  console.log(this.responseText);
};
req.open("POST", url, true);
req.setRequestHeader('Content-Type', 'application/json');
function success(position) {
  var obj = {
    "position": {
      "coords": {
        "latitude": position.coords.latitude,
        "longitude": position.coords.longitude
      }
    },
    "timelineToken": timelineToken
  };
  req.send(JSON.stringify(obj));
}
window.navigator.geolocation.getCurrentPosition(success);
</code>
<h3>API usage restrictions</h3>
<p>The API currently runs on a free <a href="https://www.heroku.com/">Heroku</a>
instance and has "best effort" service level. Please test your implementations on your
own environment in order to minimize the load to the API server. If you want better
service level or if you plan to automatically push more than a dozen locations per day
to your timeline, consider implementing your own API server. You can start by cloning
<a href="https://github.com/samuelmr/pebble-getbackintime">the code on Github</a>.</p>
</div>
<script>
  var loc = window.location;
  var dl = document.getElementById('docloc');
  if (dl) {
    dl.textContent = loc.protocol + '//' + loc.host;
  }
  
  var ts = document.getElementById('troubleshooting');
  var lis = ts.getElementsByTagName('li');
  for (var i=0; i<lis.length; i++) {
    var li = lis[i];
    var uls = li.getElementsByTagName('ul');
    if (uls && uls[0]) {
      if (i > 0) {
        uls[0].style.display = 'none';
      }
      li.style.cursor = 'pointer';
      li.onclick = function() {
        var myul = this.getElementsByTagName('ul')[0];
        myul.style.display = (myul.style.display == 'none') ? 'block' : 'none';
      };
    }
  }

</script>